doctype html
//
    144.974, -37.809
html
    head
        script(src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.js')
        link(href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.css', rel='stylesheet')
        link(href='https://fonts.googleapis.com/css?family=Roboto+Mono', rel='stylesheet')
        script(src='../js/map.js')
        link(rel='stylesheet', href='../css/map.css')
    body
        .sidebar
            .heading
                h1#place_name Place_name
            #listings.listings
        #map.map
        script.
            //ref: https://docs.mapbox.com/help/tutorials/building-a-store-locator/
            //these scripts are reference to the mapbox api, locator tutorial

            // variables rendered from search.js using pug
            // carpark colletion contains lat, lon, id and status of every carpark
            var carpark_collection = !{ carpark_collection }
            var search_geojson = !{ search_geojson }
            // the address of highest relevance result from user search input
            var place_name = !{ place_name }

            //setup map using accesstoken
            mapboxgl.accessToken = 'pk.eyJ1IjoieXVtaW5vdW5nIiwiYSI6ImNqdXczOWVzazA4OXM0M2xhMHJ3amhyOWUifQ.EXLrlr49xL8WfBh5PAVWMw';
            
            // add the map to page
            var map = new mapboxgl.Map({
            // container id specified in the HTML
            container: 'map',
            // map style provided by mapbox
            style: 'mapbox://styles/mapbox/light-v10',
            // initial position in [lon, lat] set Melbourne CBD
            center: !{ coordinates },
            // initial zoom
            zoom: 15
            });
            map.addControl(new mapboxgl.NavigationControl());

            map.on('load', function (e) {
            // Add the data to your map as a layer
            // build sidebar result list from nearest to furthest
            buildLocationList(carpark_collection, place_name);
            map.addLayer({
            id: 'locations',
            type: 'symbol',
            // Add a GeoJSON source containing place coordinates and information.
            source: {
            type: 'geojson',
            data: carpark_collection
            },
            layout: {
            'icon-image': 'car-15',
            'icon-allow-overlap': true,
            }
            });

            map.addLayer({
            id: "search_location",
            type: "circle",
            source: {
            type: "geojson",
            data: search_geojson
            },

            paint: {
            'circle-radius': {
            property: 'bike_count',
            type: 'interval',
            stops: [
            [0, 5],
            [1, 5.5],
            [3, 6]
            ]
            },
            'circle-stroke-width': 20,
            'circle-stroke-opacity': 0.20
            },
            });
            });


            map.on('click', function(e) {
            // Query all the rendered points in the view
            var features = map.queryRenderedFeatures(e.point, { layers: ['locations'] });
            if (features.length) {
            var clickedPoint = features[0];
            // 1. Fly to the point
            flyToCarpark(clickedPoint);
            // 2. Close all other popups and display popup for clicked store
            createPopUp(clickedPoint);
            // 3. Highlight listing in sidebar (and remove highlight for all other listings)
            var activeItem = document.getElementsByClassName('active');
            if (activeItem[0]) {
            activeItem[0].classList.remove('active');
            }
            // Find the index of the carpark.features that corresponds to the clickedPoint that fired the event listener
            var selectedFeature = clickedPoint.properties.address;

            for (var i = 0; i < carpark_collection.features.length; i++) {
            if (carpark_collection.features[i].properties.address === selectedFeature) {
            selectedFeatureIndex = i;
            }
            }
            // Select the correct list item using the found index and add the active class
            var listing = document.getElementById('listing-' + selectedFeatureIndex);
            listing.classList.add('active');
            }
            });
            